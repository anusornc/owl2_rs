//! Additional benchmark tests to identify potential performance bottlenecks\n\nuse criterion::{criterion_group, criterion_main, Criterion};\nuse owl2_rs::{\n    api::{load_ontology, Reasoner},\n    owl2_profile::{check_profile_compliance, OwlProfile},\n};\n\n/// Creates a large ontology for stress testing\nfn create_large_ontology() -> String {\n    let mut ontology = String::from(\"Ontology(<http://example.com/large_benchmark>\\n\");\n    \n    // Add many classes\n    for i in 0..100 {\n        ontology.push_str(&format!(\"  SubClassOf(Class(<http://example.com/Class{}>) Class(<http://example.com/ParentClass{}>))\\n\", i, i % 10));\n    }\n    \n    // Add many individuals and assertions\n    for i in 0..50 {\n        ontology.push_str(&format!(\"  ClassAssertion(Class(<http://example.com/Class{}>) NamedIndividual(<http://example.com/individual{}>))\\n\", i % 20, i));\n        ontology.push_str(&format!(\"  ObjectPropertyAssertion(ObjectProperty(<http://example.com/hasRelation>) NamedIndividual(<http://example.com/individual{}>) NamedIndividual(<http://example.com/individual{}>))\\n\", i, (i + 1) % 50));\n    }\n    \n    ontology.push_str(\")\");\n    ontology\n}\n\n/// Benchmark for large ontology parsing\nfn bench_large_ontology_parse(c: &mut Criterion) {\n    let ontology_str = create_large_ontology();\n    \n    c.bench_function(\"parse_large_ontology\", |b| {\n        b.iter(|| {\n            let _ontology = load_ontology(&ontology_str).expect(\"Failed to parse ontology\");\n        })\n    });\n}\n\n/// Benchmark for large ontology RL profile checking\nfn bench_large_rl_profile_check(c: &mut Criterion) {\n    let ontology_str = create_large_ontology();\n    let ontology = load_ontology(&ontology_str).expect(\"Failed to parse ontology\");\n    \n    c.bench_function(\"rl_profile_check_large\", |b| {\n        b.iter(|| {\n            let _result = check_profile_compliance(&ontology, OwlProfile::RL);\n        })\n    });\n}\n\ncriterion_group! {\n    name = large_benches;\n    config = Criterion::default().sample_size(5); // Smaller sample size for large tests\n    targets = bench_large_ontology_parse, bench_large_rl_profile_check\n}\n\ncriterion_main!(large_benches);